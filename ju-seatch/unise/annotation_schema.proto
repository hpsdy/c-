// define the general search request
// Author: wangguangyuan@baidu.com (Guangyuan Wang)

package unise;

/// @brief AnnotationSchema，描述格式，每个EngineUnit仅加载一份文件
///        无范围检索字段时，可以不设置AnnotationSchema，程序会自动生成
enum AnnotationType {
    TEXT = 1;
    NUMBER = 2;
};

enum TextIndexType {
    TEXT_FULL       = 1; ///< 按照字符串来建索引，不切词
    TEXT_SEG        = 2; ///< 按照字符串来建索引，使用系统配置的NLP切词
    TEXT_SEG_BY_SEP = 3; ///< 按照配置的标点符号，进行切词
    PREFIX          = 4; ///< 使用'-'来分割，对所有的前缀建索引
    TEXT_WORD       = 5; ///< 按照单个字建索引
};

message TextSchema {
    required TextIndexType index_type = 1; ///< 索引类型
    // 是否进行大小写转换,半角转全角,繁体转简体
    optional bool trans_conversion    = 2 [default=true];

    // 切词参数配置，index_type=TEXT_SEG时配置生效
    // 支持SCW_OUT_BASIC,SCW_OUT_WPCOMP,SCW_OUT_SUBPH,SCW_OUT_HUMANNAME,SCW_OUT_BOOKNAME,
    //     SCW_OUT_NEWWORD,SCW_OUT_DISAMB其中方式或其组合
    // note: 参考lib2-64/wordseg/scwdef.h
    // 默认使用WPCOMP切词方式，即4
    // 组合方式：如：SCW_OUT_WPCOMP | SCW_OUT_NEWWORD，配置为68
    optional uint32 scw_out_flags     = 3 [default=4];
    // 如果未设置，不设置切词的lang_para
    // 采用数字，如：scw_crf | scw_disamb，配置为128
    // 注意，部分配置需要同时打开scw.conf相应开关
    optional uint32 scw_lang_para     = 4;
    //如果未设置,默认使用中文切词(LANGTYPE_SIMP_CHINESE)
    // http://wiki.babel.baidu.com/twiki/bin/view/PS/Main/FreshArchCollectionInfoOthers
    optional uint32 scw_seg_lang      = 5 [default=1];
};

message NumberSchema {
    required int64 min      = 1;   ///< 最小取值，正数
    required int64 max      = 2;   ///< 最大取值，正数
    required int32 accuracy = 3;   ///< 精度，整数
};

/// @brief Annotation的存储位置，暂时只实现内存方式的
enum StoreType {
    STORE_INDEX  = 1;              ///< 置位，表示需要索引
    STORE_MEMORY = 2;              ///< 置位，表示原文需要存储在Memory区域Annotation中
    STORE_DISK   = 4;              ///< 置位，标识原文需要存储在Disk区域的Annotation中，未实现
};

message AnnotationSchema {
    required uint32 id                      = 1;  ///< 取值范围：0~255
    required string annotation_name         = 2;  ///< 必须填写
    required uint32 section_id              = 3;  ///< 取值范围: 0~255
    required string section_name            = 4;  ///< 非""，则建section索引
    required AnnotationType annotation_type = 5;
    required uint32 store_type              = 6;  ///< 是否进行索引，以及是否保留并存储下来，位标记
    optional TextSchema text_schema         = 7;
    optional NumberSchema number_schema     = 8;
};

message AnnotationSchemaConfig {
    repeated AnnotationSchema annotation_schemas = 1;
};

message FilterRelationShip {
    required uint32 foreign_key      = 1; ///< 这个字段是外键，取值是annotation_id
    required uint32 level_id         = 2;
    required uint32 relation_key     = 3; ///< 关联到的字段，取值是annoid
    repeated uint32 filted_values     = 4; ///< 代表被过滤的值
};

// warning: 最多支持8个
// warning: 不支持同时有2个外键，刚好这2个外键的level_id相同
message FilterRelationShipConfig {
    repeated FilterRelationShip filter_relation_ships = 1;
};

